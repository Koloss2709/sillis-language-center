import smtplib
import os
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from datetime import datetime
from models import EmailData
import logging

logger = logging.getLogger(__name__)


class EmailService:
    def __init__(self):
        self.smtp_host = os.getenv('SMTP_HOST', 'smtp.gmail.com')
        self.smtp_port = int(os.getenv('SMTP_PORT', '587'))
        self.smtp_user = os.getenv('SMTP_USER', '')
        self.smtp_password = os.getenv('SMTP_PASSWORD', '')
        self.email_from = os.getenv('EMAIL_FROM', 'silisykt@mail.ru')
        self.email_to = os.getenv('EMAIL_TO', 'silisykt@mail.ru')

    def create_submission_email(self, data: EmailData) -> MIMEMultipart:
        """–°–æ–∑–¥–∞–µ—Ç email —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞—è–≤–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        
        msg = MIMEMultipart('alternative')
        msg['Subject'] = f'–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ö–ü –æ—Ç {data.name}'
        msg['From'] = self.email_from
        msg['To'] = self.email_to

        # HTML template for admin notification
        html_content = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <style>
                body {{
                    font-family: Arial, sans-serif;
                    line-height: 1.6;
                    color: #333;
                    max-width: 600px;
                    margin: 0 auto;
                    padding: 20px;
                }}
                .header {{
                    background: linear-gradient(135deg, #0E3F2B 0%, #7DB68C 100%);
                    color: white;
                    padding: 20px;
                    border-radius: 8px;
                    text-align: center;
                    margin-bottom: 20px;
                }}
                .content {{
                    background: #f9f9f9;
                    padding: 20px;
                    border-radius: 8px;
                    border-left: 4px solid #7DB68C;
                }}
                .field {{
                    margin-bottom: 15px;
                    padding: 10px;
                    background: white;
                    border-radius: 4px;
                }}
                .field-label {{
                    font-weight: bold;
                    color: #0E3F2B;
                }}
                .field-value {{
                    margin-top: 5px;
                    color: #333;
                }}
                .footer {{
                    text-align: center;
                    margin-top: 20px;
                    padding: 15px;
                    background: #EDE6D6;
                    border-radius: 8px;
                    font-size: 14px;
                    color: #666;
                }}
            </style>
        </head>
        <body>
            <div class="header">
                <h2>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</h2>
                <p>–¶–µ–Ω—Ç—Ä —è–∫—É—Ç—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ ¬´–°–∏–ª–∏—Å¬ª</p>
            </div>
            
            <div class="content">
                <div class="field">
                    <div class="field-label">–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞:</div>
                    <div class="field-value">{data.name}</div>
                </div>
                
                <div class="field">
                    <div class="field-label">–¢–µ–ª–µ—Ñ–æ–Ω:</div>
                    <div class="field-value">{data.phone}</div>
                </div>
                
                <div class="field">
                    <div class="field-label">Email:</div>
                    <div class="field-value">{data.email}</div>
                </div>
                
                {f'''<div class="field">
                    <div class="field-label">–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:</div>
                    <div class="field-value">{data.organization}</div>
                </div>''' if data.organization else ''}
                
                {f'''<div class="field">
                    <div class="field-label">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</div>
                    <div class="field-value">{data.comment}</div>
                </div>''' if data.comment else ''}
                
                <div class="field">
                    <div class="field-label">–î–∞—Ç–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏:</div>
                    <div class="field-value">{data.created_at.strftime('%d.%m.%Y –≤ %H:%M')}</div>
                </div>
            </div>
            
            <div class="footer">
                <p>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ —Ü–µ–Ω—Ç—Ä–∞ ¬´–°–∏–ª–∏—Å¬ª</p>
                <p>–°–≤—è–∂–∏—Ç–µ—Å—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</p>
            </div>
        </body>
        </html>
        """

        # Plain text version
        text_content = f"""
        –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
        –¶–µ–Ω—Ç—Ä —è–∫—É—Ç—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ ¬´–°–∏–ª–∏—Å¬ª
        
        –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞: {data.name}
        –¢–µ–ª–µ—Ñ–æ–Ω: {data.phone}
        Email: {data.email}
        {'–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: ' + data.organization if data.organization else ''}
        {'–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ' + data.comment if data.comment else ''}
        –î–∞—Ç–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏: {data.created_at.strftime('%d.%m.%Y –≤ %H:%M')}
        
        –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.
        """

        # Attach both versions
        msg.attach(MIMEText(text_content, 'plain', 'utf-8'))
        msg.attach(MIMEText(html_content, 'html', 'utf-8'))

        return msg

    def create_confirmation_email(self, data: EmailData) -> MIMEMultipart:
        """–°–æ–∑–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–π email –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞"""
        
        msg = MIMEMultipart('alternative')
        msg['Subject'] = '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ - –¶–µ–Ω—Ç—Ä —è–∫—É—Ç—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ ¬´–°–∏–ª–∏—Å¬ª'
        msg['From'] = self.email_from
        msg['To'] = data.email

        # HTML template for client confirmation
        html_content = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <style>
                body {{
                    font-family: Arial, sans-serif;
                    line-height: 1.6;
                    color: #333;
                    max-width: 600px;
                    margin: 0 auto;
                    padding: 20px;
                }}
                .header {{
                    background: linear-gradient(135deg, #0E3F2B 0%, #7DB68C 100%);
                    color: white;
                    padding: 20px;
                    border-radius: 8px;
                    text-align: center;
                    margin-bottom: 20px;
                }}
                .content {{
                    background: #f9f9f9;
                    padding: 20px;
                    border-radius: 8px;
                }}
                .highlight {{
                    background: #EDE6D6;
                    padding: 15px;
                    border-radius: 8px;
                    margin: 15px 0;
                    border-left: 4px solid #7DB68C;
                }}
                .contact-info {{
                    background: white;
                    padding: 15px;
                    border-radius: 8px;
                    margin: 15px 0;
                }}
                .footer {{
                    text-align: center;
                    margin-top: 20px;
                    padding: 15px;
                    font-size: 14px;
                    color: #666;
                }}
            </style>
        </head>
        <body>
            <div class="header">
                <h2>–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É!</h2>
                <p>–¶–µ–Ω—Ç—Ä —è–∫—É—Ç—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ ¬´–°–∏–ª–∏—Å¬ª</p>
            </div>
            
            <div class="content">
                <p>–£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) {data.name}!</p>
                
                <p>–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–∏–º —É—Å–ª—É–≥–∞–º.</p>
                
                <div class="highlight">
                    <strong>–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–∞–ª—å—à–µ:</strong>
                    <ul>
                        <li>–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è</li>
                        <li>–ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</li>
                        <li>–û–±—Å—É–¥–∏–º –≤—Å–µ –¥–µ—Ç–∞–ª–∏ –∏ –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã</li>
                    </ul>
                </div>
                
                <div class="contact-info">
                    <strong>–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:</strong><br>
                    üìß Email: silisykt@mail.ru<br>
                    üìû –¢–µ–ª–µ—Ñ–æ–Ω: 8 914 287 0753, 8 964 076 7660<br>
                    üìç –ê–¥—Ä–µ—Å: –≥. –Ø–∫—É—Ç—Å–∫, —É–ª. –õ–µ—Ä–º–æ–Ω—Ç–æ–≤–∞ 47, –¢–¶ –ù–û–†–î, 4 —ç—Ç–∞–∂<br>
                    üí¨ WhatsApp: <a href="https://wa.me/79649767660">+7 964 976-76-60</a>
                </div>
                
                <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>
                –ö–æ–º–∞–Ω–¥–∞ —Ü–µ–Ω—Ç—Ä–∞ —è–∫—É—Ç—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ ¬´–°–∏–ª–∏—Å¬ª</p>
            </div>
            
            <div class="footer">
                <p>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.</p>
            </div>
        </body>
        </html>
        """

        # Plain text version
        text_content = f"""
        –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É!
        –¶–µ–Ω—Ç—Ä —è–∫—É—Ç—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ ¬´–°–∏–ª–∏—Å¬ª
        
        –£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) {data.name}!
        
        –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏ –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –Ω–∞—à–∏–º —É—Å–ª—É–≥–∞–º.
        
        –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–∞–ª—å—à–µ:
        - –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è
        - –ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ  
        - –û–±—Å—É–¥–∏–º –≤—Å–µ –¥–µ—Ç–∞–ª–∏ –∏ –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã
        
        –ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:
        Email: silisykt@mail.ru
        –¢–µ–ª–µ—Ñ–æ–Ω: 8 914 287 0753, 8 964 076 7660
        –ê–¥—Ä–µ—Å: –≥. –Ø–∫—É—Ç—Å–∫, —É–ª. –õ–µ—Ä–º–æ–Ω—Ç–æ–≤–∞ 47, –¢–¶ –ù–û–†–î, 4 —ç—Ç–∞–∂
        WhatsApp: +7 964 976-76-60
        
        –° —É–≤–∞–∂–µ–Ω–∏–µ–º,
        –ö–æ–º–∞–Ω–¥–∞ —Ü–µ–Ω—Ç—Ä–∞ —è–∫—É—Ç—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ ¬´–°–∏–ª–∏—Å¬ª
        """

        # Attach both versions
        msg.attach(MIMEText(text_content, 'plain', 'utf-8'))
        msg.attach(MIMEText(html_content, 'html', 'utf-8'))

        return msg

    async def send_submission_notification(self, data: EmailData) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ"""
        try:
            msg = self.create_submission_email(data)
            return await self._send_email(msg)
        except Exception as e:
            logger.error(f"Failed to send submission notification: {e}")
            return False

    async def send_confirmation_email(self, data: EmailData) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É"""
        try:
            msg = self.create_confirmation_email(data)
            return await self._send_email(msg)
        except Exception as e:
            logger.error(f"Failed to send confirmation email: {e}")
            return False

    async def _send_email(self, msg: MIMEMultipart) -> bool:
        """–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email"""
        try:
            # Skip email sending in development if no SMTP configured
            if not self.smtp_user or not self.smtp_password:
                logger.info("SMTP not configured - email would be sent in production")
                logger.info(f"Email subject: {msg['Subject']}")
                logger.info(f"Email to: {msg['To']}")
                return True

            with smtplib.SMTP(self.smtp_host, self.smtp_port) as server:
                server.starttls()
                server.login(self.smtp_user, self.smtp_password)
                server.send_message(msg)
                logger.info(f"Email sent successfully to {msg['To']}")
                return True

        except Exception as e:
            logger.error(f"Failed to send email: {e}")
            return False


# Create global instance
email_service = EmailService()